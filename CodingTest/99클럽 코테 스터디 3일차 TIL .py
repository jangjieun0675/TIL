# 2024. 05. 22. 수요일
# 오늘의 학습 키워드 : 스택/큐
# 해시태그 : #99클럽 #코딩테스트 준비 #개발자 취업 #항해99 #TIL

#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 나의 문제 풀이
def no_continuous(arr):
    number = [] # 답을 저장할 리스트 생성
    temp = -1 # 중복 데이터를 확인을 위한 변수 선언
    for i in arr: # 배열 요소를 하나씩 꺼냄
        if i != temp : # 이전 데이터와 같지 않다면
            number.append(i) # 리스트에 추가
            temp = i # 중복 데이터 확인 변수를 해당 원소로 업데이트
    return number
    
#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 개선할 사항
# def no_continuous(s):
#     result = []
#     for c in s:
#         if len(result) == 0 or result[-1] != c:
#             result.append(c)

#     return result
# 나는 temp변수를 사용했지만 만약 배열 원소의 크기의 제한이 없다면 불가능하다
# 그러므로 위의 알고리즘처럼 개선할 필요가 있다!!

#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 문제 설명
# 배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다. 이때, 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다. 단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다. 예를 들면,

# arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다.
# arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다.
# 배열 arr에서 연속적으로 나타나는 숫자는 제거하고 남은 수들을 return 하는 solution 함수를 완성해 주세요.

# 제한사항
# 배열 arr의 크기 : 1,000,000 이하의 자연수
# 배열 arr의 원소의 크기 : 0보다 크거나 같고 9보다 작거나 같은 정수
# 입출력 예
# arr	answer
# [1,1,3,3,0,1,1]	[1,3,0,1]
# [4,4,4,3,3]	[4,3]