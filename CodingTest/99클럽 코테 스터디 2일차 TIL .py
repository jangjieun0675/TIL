# 2024. 05. 21. 화요일
# 오늘의 학습 키워드 : 해시
# 해시태그 : #99클럽 #코딩테스트 준비 #개발자 취업 #항해99 #TIL

#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 나의 문제 풀이
import collections
def solution(participant, completion):
    answer = collections.Counter(participant)-collections.Counter(completion)
    return list(answer.keys())[0]

# collections 모듈의 Counter 클래스 사용
# 각 원소가 몇 번 나오는지 딕셔너리 형태로 저장됨
# 차집합을 통해 리스트에 없는 원소만 추출 -> 이때 딕셔너리로 저장 
    
#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 개선할 사항
# 처음에는 set을 이용하여 풀려 했으나 동명이인의 경우에서 막혀버렸다...
# 그래서 collections함수를 처음 배우고 사용해보았다.
    
#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 문제 설명
# 수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.

# 마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.

# 제한사항
# 마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.
# completion의 길이는 participant의 길이보다 1 작습니다.
# 참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.
# 참가자 중에는 동명이인이 있을 수 있습니다.
# 입출력 예
# participant	completion	return
# ["leo", "kiki", "eden"]	["eden", "kiki"]	"leo"
# ["marina", "josipa", "nikola", "vinko", "filipa"]	["josipa", "filipa", "marina", "nikola"]	"vinko"
# ["mislav", "stanko", "mislav", "ana"]	["stanko", "ana", "mislav"]	"mislav"
# 입출력 예 설명
# 예제 #1
# "leo"는 참여자 명단에는 있지만, 완주자 명단에는 없기 때문에 완주하지 못했습니다.

# 예제 #2
# "vinko"는 참여자 명단에는 있지만, 완주자 명단에는 없기 때문에 완주하지 못했습니다.

# 예제 #3
# "mislav"는 참여자 명단에는 두 명이 있지만, 완주자 명단에는 한 명밖에 없기 때문에 한명은 완주하지 못했습니다.